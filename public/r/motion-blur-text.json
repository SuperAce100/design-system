{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "motion-blur-text",
  "type": "registry:component",
  "title": "Motion Blur Text",
  "description": "A cool motion blur text effect.",
  "dependencies": [],
  "files": [
    {
      "path": "registry/new-york/blocks/motion-blur-text/motion-blur-text.tsx",
      "content": "\"use client\";\nimport React from \"react\";\n\ninterface MotionBlurTextProps {\n  children: React.ReactNode;\n  blurAmount?: number;\n  className?: string;\n  angle?: number;\n  opacity?: number;\n  bidirectional?: boolean;\n  color?: string;\n}\n\nexport default function MotionBlurText({\n  children,\n  blurAmount = 100,\n  color = \"white\",\n  angle = 135,\n  opacity = 0.05,\n  bidirectional = true,\n  className,\n}: MotionBlurTextProps) {\n  // Calculate shadow offsets based on angle\n  const getShadows = () => {\n    const shadows = [];\n    const radianAngle = (angle * Math.PI) / 180;\n    const xStep = Math.cos(radianAngle);\n    const yStep = Math.sin(radianAngle);\n\n    // Create multiple text shadows with decreasing opacity and increasing blur\n    for (let i = 1; i <= blurAmount; i++) {\n      if (i % 5 !== 0) continue;\n      const baseOpacity = opacity;\n      const opacityStep = baseOpacity / (blurAmount + 2);\n      const layerOpacity = baseOpacity - i * opacityStep;\n      const x = xStep * i;\n      const y = yStep * i;\n      const blur = (i + 5) / 5; // Increase blur with each layer\n      shadows.push(\n        `${x.toFixed(3)}px ${y.toFixed(3)}px ${blur}px rgba(${\n          color === \"white\" ? \"255,255,255\" : \"0,0,0\"\n        }, ${layerOpacity.toFixed(3)})`\n      );\n\n      // Add bidirectional shadows if enabled\n      if (bidirectional) {\n        shadows.push(\n          `${(-x).toFixed(3)}px ${(-y).toFixed(3)}px ${blur}px rgba(${\n            color === \"white\" ? \"255,255,255\" : \"0,0,0\"\n          }, ${layerOpacity.toFixed(3)})`\n        );\n      }\n    }\n\n    return shadows.join(\", \");\n  };\n\n  return (\n    <div\n      className={className}\n      style={{\n        textShadow: getShadows(),\n        lineHeight: 1.2,\n        position: \"relative\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}